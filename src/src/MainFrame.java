
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.ScrollPaneConstants;



/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author oyatsumi
 */
public class MainFrame extends javax.swing.JFrame {
    public static MainFrame mframe;
    private static Timer timer;
    private static int timertempo = 142;
    private static String escritoanteriormente;
    private static boolean senhaboolean = false;
    private static String senha = "", senhaconfirmacao = "";
    
    /**
     * Creates new form MainFrame
     */


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Robosperto 1.0");
        setName("frame0");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPasswordField1.setBackground(new java.awt.Color(44, 39, 39));
        jPasswordField1.setForeground(new java.awt.Color(254, 254, 254));
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
        });
        getContentPane().add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 378, 490, 30));

        jTextField1.setBackground(new java.awt.Color(44, 39, 39));
        jTextField1.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(254, 254, 254));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 378, 490, 30));

        jTextArea1.setBackground(new java.awt.Color(40, 40, 40));
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(254, 254, 254));
        jTextArea1.setRows(3);
        jTextArea1.setTabSize(0);
        jTextArea1.setAutoscrolls(true);
        jTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextArea1.setDisabledTextColor(new java.awt.Color(254, 254, 254));
        jTextArea1.setMinimumSize(new java.awt.Dimension(0, 10));
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 490, 80));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI.gif"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 0, 730, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        TimerFrame(timertempo);
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        timer.cancel();
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
     int key = evt.getKeyCode();
     if (key == KeyEvent.VK_ENTER) {
                TimerFrame(timertempo);
                TratandoEntrada.Receber(mframe.jTextField1.getText());
                escritoanteriormente = mframe.jTextField1.getText();
                mframe.jTextField1.setText(null);
        }
     if (key == KeyEvent.VK_UP){
         mframe.jTextField1.setText(escritoanteriormente);
     }
     if (key == KeyEvent.VK_DOWN){
         mframe.jTextField1.setText(null);
     }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        // TODO add your handling code here:
             int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            if (senhaboolean){
                if (senha.equals("")){
                    senha = mframe.jPasswordField1.getText();
                }else{
                    senhaconfirmacao = mframe.jPasswordField1.getText();
                }
                mframe.jPasswordField1.setText(null);
                ProtegerSenha();
            }else{
                    if (mframe.jPasswordField1.getText().equals(Processando.DecriptarString(BancoDados.bancoarray.get(0)))){
                        mframe.jPasswordField1.setVisible(false);
                        mframe.jTextField1.setVisible(true);
                        Falar("Você já pode continuar utilizando o programa. Banco de dados desbloqueado.");
                        mframe.jTextField1.requestFocus();
                    }else{
                        Falar("Senha incorreta.");
                    }
                    mframe.jPasswordField1.setText(null);
            }
        }
    }//GEN-LAST:event_jPasswordField1KeyReleased

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        BancoDados.SalvarBanco();
    }//GEN-LAST:event_formWindowClosing

    public MainFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.jScrollPane1.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        this.jTextArea1.setLineWrap(true);
        this.jTextArea1.setWrapStyleWord(true);
        //adicionar icone
        InputStream imgStream = this.getClass().getResourceAsStream("Icon.png"); 
        BufferedImage bi = null; 
        try {
            bi = ImageIO.read(imgStream);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        ImageIcon myImg = new ImageIcon(bi); 
        this.setIconImage(myImg.getImage());
    }
    
    public static void ProtegerSenha(){
        if (senhaboolean && !senhaconfirmacao.equals("")){
            if (senhaconfirmacao.equals(senha)){
                BancoDados.bancoarray.remove(0);
                BancoDados.bancoarray.add(0, Processando.EncriptarString(senha));
                Falar("Banco de dados protegido com sucesso.");
                senhaboolean = false;
                senhaconfirmacao = "";
                senha = "";
                mframe.jPasswordField1.setVisible(false);
                mframe.jTextField1.setVisible(true);
                mframe.jTextField1.requestFocus();
            }
        }else if (senhaboolean && !senha.equals("")){
            Falar("Por favor, repita a sua senha:");
        }else{
            Falar("Digite a senha:");
            mframe.jPasswordField1.setVisible(true);
            mframe.jPasswordField1.requestFocus();
            mframe.jTextField1.setVisible(false);
            senhaboolean = true;
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    
    
    private static void TimerFrame(int seconds) {
        timer = new Timer();
        timer.schedule(new TimerAcao(), seconds * 1000);
    }
    
    static class TimerAcao extends TimerTask {
        public void run() {
            Falar(Processando.RetornarFrase("espera"));
            timer.cancel();
            TimerFrame(timertempo);
        }
    }
    
    public static void Falar(String frase){
        Date dNow = new Date();
        SimpleDateFormat ft = new SimpleDateFormat ("[hh:mm:ss] ");
        if (!mframe.jTextArea1.getText().equals("")){
           mframe.jTextArea1.append("\n"+ft.format(dNow)+frase); 
        }else{
           mframe.jTextArea1.append(ft.format(dNow)+frase);
        }
        mframe.jTextArea1.setCaretPosition(mframe.jTextArea1.getDocument().getLength());
    }
    
    
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                //new MainFrame().setVisible(true);
                mframe = new MainFrame();
                mframe.setVisible(true);
                BancoDados.CarregarBanco(BancoDados.nomedoarquivo);
                if (BancoDados.bancoarray.get(0).equals("")){
                    Falar(Processando.RetornarFrase("boasvindas"));
                    TimerFrame(timertempo);
                    mframe.jPasswordField1.setVisible(false);
                    mframe.jTextField1.setVisible(true);
                    mframe.jTextField1.requestFocus();
                }else{
                    Falar("Esse banco de dados é protegido por senha, para continuar insira-a abaixo:");
                    mframe.jPasswordField1.setVisible(true);
                    mframe.jTextField1.setVisible(false);
                    mframe.jPasswordField1.requestFocus();
                }
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
